from sklearn import tree
clf=tree.DecisionTreeClassifier()
clf=clf.fit(X,Y)
clf.predict(test)
class sklearn.tree.DecisionTreeClassifier(*, criterion='gini', splitter='best', max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=None, random_state=None, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, class_weight=None, presort='deprecated', ccp_alpha=0.0)[source]¶
https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier

log计算
import math
math.log(0.5,2)#后面的是底数

参数min_samples_split,默认值为2，把节点一直分类，分到小于等于2为止。参数太小会导致过拟合。
clf2=tree.DecisionTreeClassifier(min_samples_split=50)
clf2=clf2.fit(features_train,lables_train)
acc_min_samples_split_50=(clf2.predict(features_test)==labels_test).mean()
